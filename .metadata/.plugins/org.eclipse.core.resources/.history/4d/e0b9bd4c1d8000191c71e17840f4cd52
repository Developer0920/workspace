package java0527_jdbc;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

//DAO(Data Access Object) : 데이터 접근 객체
//insert등의 쿼리문 처리는 여기서 한다.
//싱글톤 패턴으로 객체 생성

public class DepartmentDAO {
	private Connection conn = null;
	private Statement stmt = null;
	private PreparedStatement pstmt = null;
	private ResultSet rs = null;
	
	private static DepartmentDAO dao = new DepartmentDAO();
	
	private DepartmentDAO() {
		
	}
	
	public static DepartmentDAO getInstance() { //DepartmentDAO를 반환하는 메소드
		return dao;
	}
	//쿼리문을 실행할 때마다 connection 객체 값을 받아와야 한다. 반복되는 부분은 별도의 메소드로 만들어서 쓴다.
	
	
	private Connection init() throws ClassNotFoundException, SQLException { //예외처리는 어차피 쿼리문 실행시 또 해야 하므로 여기서는 떠넘긴다.
		Class.forName("oracle.jdbc.OracleDriver");
		
		//서버연결
		String url = "jdbc:oracle:thin://@127.0.0.1:1521:xe";
		String username = "hr";
		String password = "a1234";
		return DriverManager.getConnection(url, username, password);
					
		
	} //end init() //////////////////////////////////
	
	//연결종료
	private void exit() {		
		
	}//
	
	public List<DepartmentDTO> listMethod() {
		List<DepartmentDTO> aList = new ArrayList<DepartmentDTO> ();
		
		try {
			conn = init(); //여기선 multi catch로 한 번에!
			stmt = conn.createStatement();//쿼리문을 실행해주는..executeQuery. 이건 statement 인터페이스에 있다??
			String sql = "select * from departments order by department_id";
			rs = stmt.executeQuery(sql); //select로 가져온 결과값은 rs가 받는다. 이걸 DTO에서 사용할 수 있도록 해야 한다.
			//근데, 이걸 바로 넘기면 안 된다. 결과값을 가져오면.. 연결을 끊어줘야 한다. 클라이언트가 접속을 하고 있다고 생각함. DB 과부화.
			while(rs.next()) {
				DepartmentDTO dto = new DepartmentDTO();
				dto.setDepartment_id(rs.getInt("department_id")); //여기 저장된 값이 int이므로 getInt를 씀.
				dto.setDepartment_name(rs.getString("department_name"));
				dto.setManager_id(rs.getInt("manager_id"));
				dto.setLocation_id(rs.getInt("location_id"));
				aList.add(dto);
			}
			
		} catch (ClassNotFoundException | SQLException e) {			
			e.printStackTrace();
		} finally {
			//rs.close(); //이렇게 끊어버리면 null값이 넘어간다. 따로 담아서 넘겨야 한다. 크기가 정해져 있지 않으므로 collection을 이용. arrayList를 이용해서 넘긴다.
			//각 레토드에 있는 걸 DTO에 담고, 이건 또 arrayList에 넘긴다.
			
		}
		return aList; //최종적으로 select해서 받아온 갓을 여기에 담아서 리턴해줘야.
	} //end listMethod()//////////////////////////////////////	
	
} //end class
