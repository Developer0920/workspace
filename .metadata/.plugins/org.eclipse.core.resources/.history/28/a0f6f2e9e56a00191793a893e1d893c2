package java0430_inheritance.part05;
/*
 * 오버라이딩
 * 1. 조상클래스의 메소드를 자식(손)클래스에서 재정의(메소드 구현부)하는 기능이다.
 * 2. 오버라이딩 성립요건
 *   1) 부모 클래스의 메소드와 메소드 이름이 동일해야 한다. //메소드 선언부
 *   2) 매개변수의 타입, 개수, 순서가 일치해야 한다. //메소드 선언부
 *   3) 리턴타입이 동일해야 한다. //메소드 선언부
 *   4) 접근제한자(제어자)는 부모클래스의 메소드와 같거나 더 넓은 범위여야 한다. //메소드 선언부.. 여긴 약간 수정이 가능하다.
 *   	private < default < protected < public
 *   5) 예외 발생시 같은 예외 형식이거나, 더 구체적인 예외 형식이어야 한다. //예외처리 관련. 나중에.
 *   
 *   //즉, 재정의하는 부분은 구현부다. .. 크게 보면 메소드 선언부는 같아야 한다고 할 수 있음.
 *   
 *   super
 *   1. 자식클래스에서 조상클래스를 호출할 때 사용
 *   2. super.멤버변수
 *	 	super.메소드
 *   	super() => 생성자
 *   
 *   단일클래스				상속관계의 자손클래스
 *   overloading	vs	overriding
 *   this			vs	super
 *
 * 오버라이딩은 일단 상속을 받아야 가능
 * 즉, 상속 여부 확인 후, 오버라이딩 여부 확인
 */
public class First {
	int a = 10;
	
	void prn() {
		System.out.println("a=" +a);
	}
} //end First class

class Second extends First{
	int b = 20;
	
	@Override //이렇게 실수를 미연에 방지할 수 있다. override란 annotation. 정확하게 override 됐는지 체크해 주는 기능.
	void prn() { //다르게 메소드명을 쓰면 오버라이딩이 아니다. 그냥 메소드 하나를 더 만든 것. 이러한 실수를 막기위해..
		System.out.println("b=" + b);
	}
} //end Second class


